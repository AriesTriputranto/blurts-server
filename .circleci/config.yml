version: 2.1

executors:
    node:
        docker:
            - image: cimg/node:14.17
    python:
        docker:
            - image: cimg/python:3.9.7
    ubuntu:
        machine:
            image: ubuntu-2004:202107-02

orbs:
    node: circleci/node@4.7.0
    python: circleci/python@1.4.0

jobs:
    lint-js:
        executor: node
        steps:
            - checkout
            - node/install-packages
            - run: npm run lint:js
    lint-css:
        executor: node
        steps:
            - checkout
            - node/install-packages
            - run: npm run lint:css
    lint-audit:
        executor: node
        steps:
            - checkout
            - node/install-packages
            - run: npm run lint:audit
    lint-l10n:
        executor: python
        steps:
            - checkout
            - run: pip install compare-locales
            - run:
                  name: Lint and compare locales
                  command: |
                      moz-l10n-lint l10n.toml
                      compare-locales l10n.toml . `ls locales`
    unit-tests:
        executor: ubuntu
        environment:
            DATABASE_URL: postgresql://postgres:unsafe-dev-pass@localhost/blurts
        steps:
            - checkout
            - run: 
                name: Install Postgres
                # Installing Postgres on a host machine. 
                # Originally attempted to use a container, but communication between container-within-a-container is not well supported currently
                # The solutions here were attempted without success: https://stackoverflow.com/questions/48546124/what-is-linux-equivalent-of-host-docker-internal
                command: |
                    sudo apt-get update
                    sudo apt-get install postgresql
                    pg_isready
            - run:
                name: Create test database
                command: |
                    sudo -u postgres createdb test-blurts | cat
                    # Set password to allow Docker connection
                    sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'unsafe-dev-pass';" | cat
            - run:
                name: Build app container in dev mode
                command: docker build -t blurts-server . --build-arg dev=true
            - run:
                name: Test Code
                command: |
                    docker run --network="host" \
                    --env-file .env-dist \
                    -e NODE_ENV=tests \
                    -e DATABASE_URL=$DATABASE_URL \
                    -e HIBP_KANON_API_TOKEN=$HIBP_KANON_API_TOKEN \
                    -e COVERALLS_SERVICE_NAME=circleci \
                    -e COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN \
                    -e COVERALLS_GIT_BRANCH=$CIRCLE_BRANCH \
                    blurts-server npm test

    integration-tests:
        executor: ubuntu
        steps:
            - checkout
            - node/install-npm:
                # Official node@14 images come packaged with npm@6. For some reason, this ubuntu image comes with node@14 + npm@7
                # Attempted to roll ubuntu image back, but current version includes docker-compose bug-fix which we use (--env-file)
                version: "6"
            - node/install-packages
            - run:
                  name: Run tests
                  command: |
                      cp .env-dist .env
                      sudo chown -R  $USER:$USER .
                      mkdir ./tests/integration/errorShots
                      docker-compose --env-file .env -f tests/integration/docker-compose.yml up --build -d
                      docker-compose --env-file .env -f tests/integration/docker-compose.yml exec --user root firefox npm run test:integration-headless-ci
            - run:
                  name: Capture logs
                  when: on_fail
                  command: |
                      docker-compose -f tests/integration/docker-compose.yml logs server &> tests/integration/server.log
                      docker-compose -f tests/integration/docker-compose.yml logs postgres &> tests/integration/postgres.log
                      docker-compose -f tests/integration/docker-compose.yml logs firefox &> tests/integration/firefox.log
            - store_artifacts:
                  path: ./tests/integration/errorShots/
            - store_artifacts:
                  path: ./tests/integration/server.log
            - store_artifacts:
                  path: ./tests/integration/postgres.log
            - store_artifacts:
                  path: ./tests/integration/firefox.log

workflows:
    lint-and-test:
        jobs:
            - lint-js
            - lint-css
            - lint-audit
            - lint-l10n
            - unit-tests
            - integration-tests
